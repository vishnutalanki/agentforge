from abc import ABC, abstractmethod

class Tool(ABC):
    """Abstract base class for defining tools."""

    def __init__(self, tool_id: str):
        """
        Initialize a tool with a unique identifier.

        Args:
            tool_id (str): Unique identifier for the tool.
        """
        self.tool_id = tool_id

    @abstractmethod
    def execute(self, input_data: any) -> any:
        """
        Abstract method to define the tool's action.

        Args:
            input_data (any): Input data for the tool to process.

        Returns:
            any: Output data generated by the tool.
        """
        pass

    def __repr__(self):
        return f"Tool(id={self.tool_id})"
